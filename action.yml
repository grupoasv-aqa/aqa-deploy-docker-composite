name: 'Docker deployment'
description: 'Despliegue docker por SSH'
inputs:
  ssh-host:  # id of input
    description: 'SSH host'
    required: true
  ssh-user:
    description: 'SSH user'
    required: true
  ssh-private-key:
    description: 'SSH private key'
    required: true
  origin-path:
    description: 'Path for origin files'
    required: true
  destination-path:
    description: 'Path to copy files'
    required: true
  clear-destination-path:
    description: 'Remove files on destination path'
    required: false
    default: "/"
  mode:
    description: 'Execution mode (SCRIPT or DOCKER-COMPOSE)'
    required: false
    default: "SCRIPT"
  image-version:
    description: 'Docker image version to deploy'
    required: false

  # For DOCKER-COMPOSE deployments
  compose-path:
    description: 'Subfolder where docker-compose.yml is'
    required: false
    default: ""
  compose-filename:
    description: 'Name of docker-compose file'
    required: false
    default: "docker-compose.yml"

# For SCRIPT deployments
  deploy-script:
    description: 'Script provided by app to deploy it'
    required: false

  environment:
    description: 'Application environment'
    required: false

runs:
  using: "composite"
  steps:
    - name: Prepare path
      run: eval $(ssh-agent -s) && ssh-add <(echo "${{ inputs.ssh-private-key }}") && ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p "22" ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} "mkdir -p ${{ inputs.destination-path }} && rm -fr ${{ inputs.destination-path }}/* && exit" && echo "Path listo"
      shell: bash
    - name: Copy files
      run: eval $(ssh-agent -s) && ssh-add <(echo "${{ inputs.ssh-private-key }}") && scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -P "22" -r ${{ inputs.origin-path }} ${{ inputs.ssh-user }}@${{ inputs.ssh-host }}:${{ inputs.destination-path }} && echo "Ficheros copiados"
      shell: bash

    - name: DOCKER-COMPOSE Pull images
      if: inputs.mode == 'DOCKER-COMPOSE'
      run: eval $(ssh-agent -s) && ssh-add <(echo "${{ inputs.ssh-private-key }}") && ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p "22" ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} "docker-compose --env-file=${{ inputs.destination-path }}${{ inputs.compose-path }}/githubcreds -f ${{ inputs.destination-path }}${{ inputs.compose-path }}/${{ inputs.compose-filename}} pull && exit" && echo "Imágenes actualizadas"
      shell: bash
    - name: DOCKER-COMPOSE Deploy docker
      if: inputs.mode == 'DOCKER-COMPOSE'
      run: eval $(ssh-agent -s) && ssh-add <(echo "${{ inputs.ssh-private-key }}") && ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p "22" ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} "docker-compose --env-file=${{ inputs.destination-path }}${{ inputs.compose-path }}/githubcreds -f ${{ inputs.destination-path }}${{ inputs.compose-path }}/${{ inputs.compose-filename}} up -d && exit" && echo "Aplicacion desplegada"
      shell: bash

    - name: SCRIPT Execution permission to custom script
      if: inputs.mode == 'SCRIPT'
      run: eval $(ssh-agent -s) && ssh-add <(echo "${{ inputs.ssh-private-key }}") && ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p "22" ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} "chmod +x ${{ inputs.destination-path }}/${{ inputs.deploy-script }} && exit" && echo "Script de despliegue encontrado"
      shell: bash
    - name: SCRIPT Execute deploy script
      if: inputs.mode == 'SCRIPT'
      run: eval $(ssh-agent -s) && ssh-add <(echo "${{ inputs.ssh-private-key }}") && ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p "22" ${{ inputs.ssh-user }}@${{ inputs.ssh-host }} "cd ${{ inputs.destination-path }} && ./${{ inputs.deploy-script }} ${{ inputs.image-version }} ${{ inputs.environment }} && exit" && echo "Aplicación desplegada con script"
      shell: bash
